.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plasticanalysis_220_HW13_P2.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plasticanalysis_220_HW13_P2.py:


Upper Bound Theorem 2
=====================


.. code-block:: default


    import ema as em
    import matplotlib.pyplot as plt
    import numpy as np
    # %config InlineBackend.figure_format = 'svg' # used to make plots look nicerbb

    mdl = em.Model(2,3)
    n = mdl.dnodes
    e = mdl.delems

    mdl.node('1',  0.0, 0.0)
    mdl.node('2',  6.0, 0.0)
    mdl.node('3',  12.0, 0.0)
    mdl.node('4', 0.0, 8.0)

    mdl.beam('a', n['1'], n['2'])
    mdl.beam('b', n['2'], n['3'])
    mdl.truss('c', n['2'], n['4'])

    mdl.fix(n['1'], ['x', 'y', 'rz'])
    mdl.fix(n['3'], ['y'])
    mdl.fix(n['4'], ['x','y', 'rz'])

    mdl.numDOF()

    # Define plastic capacity
    e['a'].Qp['+']['1'] = e['a'].Qp['-']['1'] = 500
    e['a'].Qp['+']['2'] = e['a'].Qp['-']['2'] = 150
    e['a'].Qp['+']['3'] = e['a'].Qp['-']['3'] = 150
    e['c'].Qp['+']['1'] = e['c'].Qp['-']['1'] =  20
    e['b'].Qp['+']['1'] = e['b'].Qp['-']['1'] = 500
    e['b'].Qp['+']['2'] = e['b'].Qp['-']['2'] = 150
    e['b'].Qp['+']['3'] = e['b'].Qp['-']['3'] = 150

    em.analysis.characterize(mdl)

    fig, ax = plt.subplots(1,1)
    em.plot_structure(mdl, ax)

    A = em.A_matrix(mdl)
    A.f





.. image:: /auto_examples/plasticanalysis/images/sphx_glr_220_HW13_P2_001.png
    :class: sphx-glr-single-img



.. only:: builder_html

    .. raw:: html

        <table border="1" class="dataframe">
          <thead>
            <tr style="text-align: right;">
              <th></th>
              <th>$1$</th>
              <th>$2$</th>
              <th>$3$</th>
              <th>$4$</th>
              <th>$5$</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th>$a_1$</th>
              <td>1.0</td>
              <td>0.00000</td>
              <td>0.0</td>
              <td>0.0</td>
              <td>0.0</td>
            </tr>
            <tr>
              <th>$a_2$</th>
              <td>0.0</td>
              <td>-0.16667</td>
              <td>0.0</td>
              <td>0.0</td>
              <td>0.0</td>
            </tr>
            <tr>
              <th>$a_3$</th>
              <td>0.0</td>
              <td>-0.16667</td>
              <td>1.0</td>
              <td>0.0</td>
              <td>0.0</td>
            </tr>
            <tr>
              <th>$b_1$</th>
              <td>-1.0</td>
              <td>-0.00000</td>
              <td>0.0</td>
              <td>1.0</td>
              <td>0.0</td>
            </tr>
            <tr>
              <th>$b_2$</th>
              <td>-0.0</td>
              <td>0.16667</td>
              <td>1.0</td>
              <td>0.0</td>
              <td>0.0</td>
            </tr>
            <tr>
              <th>$b_3$</th>
              <td>-0.0</td>
              <td>0.16667</td>
              <td>0.0</td>
              <td>0.0</td>
              <td>1.0</td>
            </tr>
            <tr>
              <th>$c_1$</th>
              <td>0.6</td>
              <td>-0.80000</td>
              <td>0.0</td>
              <td>0.0</td>
              <td>0.0</td>
            </tr>
          </tbody>
        </table>
        <br />
        <br />

Vertical mechanism
~~~~~~~~~~~~~~~~~~



.. code-block:: default


    n['2'].p['y'] = -50
    n['3'].p['x'] =  0.
    lambdac, Q = em.analysis.PlasticAnalysis_wLBT(mdl)
    Q

    lambdac

    B = em.B_matrix(mdl)
    P = em.P_vector(B)
    P.f

    A.f@[0, 1,0, 0, 0]

    [0, 1,0, 0, 0]@P.f

    Qpl = em.Qpl_vector(mdl)[:,0]
    Qpl

    np.abs(A.f@[0, 1,0, 0, 0])@np.abs(Q)




.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\Users\claud\Anaconda3\lib\site-packages\sphinx_gallery\gen_rst.py", line 440, in _memory_usage
        out = func()
      File "C:\Users\claud\Anaconda3\lib\site-packages\sphinx_gallery\gen_rst.py", line 425, in __call__
        exec(self.code, self.globals)
      File "C:\Users\claud\OneDrive\400_box\Python\myPackages\ema\examples\plasticanalysis\220_HW13_P2.py", line 62, in <module>
      File "C:\Users\claud\OneDrive\400_box\Python\myPackages\ema\matrices.py", line 1754, in P_vector
        P = np.zeros(model.nt)
    AttributeError: 'Static_matrix' object has no attribute 'nt'





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.198 seconds)


.. _sphx_glr_download_auto_examples_plasticanalysis_220_HW13_P2.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: 220_HW13_P2.py <220_HW13_P2.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: 220_HW13_P2.ipynb <220_HW13_P2.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
